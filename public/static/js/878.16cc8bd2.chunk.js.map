{"version":3,"file":"static/js/878.16cc8bd2.chunk.js","mappings":"iPACA,EAAwB,0BAAxB,EAAyJ,+BAAzJ,EAAoM,8B,uHCgJpM,EA1ImB,WACjB,IACWA,GACPC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,kBAD/BC,GAAM,GAER,SAYIJ,QAZJ,IAYIA,EAAAA,EAAM,GAXRK,EADF,EACEA,KACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,YAOGC,GAXL,EAKEC,QALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,UARF,EASEC,UATF,EAUEC,KAVF,aAaA,OACE,SAACC,EAAA,EAAD,CAAWC,UAAWC,EAAtB,UACE,UAACC,EAAA,EAAD,CAAKC,MAAO,CAAEC,OAAQ,IAAtB,WACE,SAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,yBACE,SAAC,IAAD,CAAkBC,GAAG,eAGxBxB,GACC,iCACE,UAACsB,EAAA,EAAD,CAAKC,GAAI,GAAT,WACE,yBACE,SAAC,IAAD,CAAkBC,GAAG,oBAEvB,gBAAKP,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACE,8BACE,2BACE,yBACE,SAAC,IAAD,CAAkBM,GAAG,YAEvB,wBAAKnB,OAENoB,OAAOC,QAAQjB,GAAIkB,KAClB,+BAAEC,EAAF,KAAOC,EAAP,WACU,OAARD,IACE,2BACE,yBACE,SAAC,IAAD,CAAkBJ,GAAII,OAExB,wBAAKC,OAJEC,EAAAA,EAAAA,oBAYvB,UAACR,EAAA,EAAD,CAAKC,GAAI,GAAT,WACE,yBACE,SAAC,IAAD,CAAkBC,GAAG,gBAFzB,OAIGjB,QAJH,IAIGA,OAJH,EAIGA,EAAWoB,KAAI,SAACI,EAAWC,GAAZ,OACd,gBAAKf,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACE,2BACGO,OAAOC,QAAQK,GAAWJ,KACzB,+BAAEC,EAAF,KAAOC,EAAP,WACU,OAARD,IACE,2BACE,yBACE,SAAC,IAAD,CAAkBJ,GAAII,OAExB,wBAAKC,OAJEC,EAAAA,EAAAA,sBAazB,UAACR,EAAA,EAAD,CAAKC,GAAI,GAAT,WACE,yBACE,SAAC,IAAD,CAAkBC,GAAG,WAFzB,OAIGlB,QAJH,IAIGA,OAJH,EAIGA,EAAMqB,KAAI,SAACI,EAAWC,GAAZ,OACT,gBAAKf,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACE,2BACGO,OAAOC,QAAQK,GAAWJ,KACzB,+BAAEC,EAAF,KAAOC,EAAP,WACU,OAARD,IACE,2BACE,yBACE,SAAC,IAAD,CAAkBJ,GAAII,OAExB,wBAAKC,OAJEC,EAAAA,EAAAA,sBAazB,UAACR,EAAA,EAAD,CAAKC,GAAI,GAAT,WACE,yBACE,SAAC,IAAD,CAAkBC,GAAG,iBAFzB,OAIGhB,QAJH,IAIGA,OAJH,EAIGA,EAAamB,KAAI,SAACI,EAAWC,GAAZ,OAChB,gBAAKf,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,UACE,2BACGO,OAAOC,QAAQK,GAAWJ,KACzB,+BAAEC,EAAF,KAAOC,EAAP,WACU,OAARD,IACE,2BACE,yBACE,SAAC,IAAD,CAAkBJ,GAAII,OAExB,wBAAKC,OAJEC,EAAAA,EAAAA,yBAe3B,SAACR,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,SAAC,IAAD,CAAkBC,GAAG","sources":["webpack://t2shira/./src/components/UserCVPage/index.module.scss?3381","components/UserCVPage/UserCVPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"table\":\"UserCVPage_table__ba9Fi\",\"removeBtn\":\"UserCVPage_removeBtn__Z0-Us\",\"table-header\":\"UserCVPage_table-header__BUFWz\",\"table-body\":\"UserCVPage_table-body__UlyKb\",\"container\":\"UserCVPage_container__-NI2T\"};","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { v4 } from \"uuid\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst UserCVPage = () => {\r\n  const {\r\n    cv: { 0: CV },\r\n  } = useSelector((state) => state.authentication);\r\n  const {\r\n    name,\r\n    jobs,\r\n    education,\r\n    experiences,\r\n    user_id,\r\n    type_of_id,\r\n    country_id,\r\n    updatedAt,\r\n    createdAt,\r\n    _id,\r\n    ...Cv\r\n  } = CV ?? {};\r\n  return (\r\n    <Container className={styles.container}>\r\n      <Row style={{ rowGap: 50 }}>\r\n        <Col xs={12}>\r\n          <h1>\r\n            <FormattedMessage id=\"cvPage\" />\r\n          </h1>\r\n        </Col>\r\n        {CV ? (\r\n          <>\r\n            <Col xs={12}>\r\n              <h3>\r\n                <FormattedMessage id=\"personalInfo\" />\r\n              </h3>\r\n              <div className={styles[\"table\"]}>\r\n                <div className={styles[\"table-body\"]}>\r\n                  <table>\r\n                    <tr>\r\n                      <th>\r\n                        <FormattedMessage id=\"name\" />\r\n                      </th>\r\n                      <td>{name}</td>\r\n                    </tr>\r\n                    {Object.entries(Cv).map(\r\n                      ([key, value]) =>\r\n                        key !== \"id\" && (\r\n                          <tr key={v4()}>\r\n                            <th>\r\n                              <FormattedMessage id={key} />\r\n                            </th>\r\n                            <td>{value}</td>\r\n                          </tr>\r\n                        )\r\n                    )}\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <h3>\r\n                <FormattedMessage id=\"education\" />\r\n              </h3>\r\n              {education?.map((tableItem, index) => (\r\n                <div className={styles[\"table\"]}>\r\n                  <div className={styles[\"table-body\"]}>\r\n                    <table>\r\n                      {Object.entries(tableItem).map(\r\n                        ([key, value]) =>\r\n                          key !== \"id\" && (\r\n                            <tr key={v4()}>\r\n                              <th>\r\n                                <FormattedMessage id={key} />\r\n                              </th>\r\n                              <td>{value}</td>\r\n                            </tr>\r\n                          )\r\n                      )}\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <h3>\r\n                <FormattedMessage id=\"jobs\" />\r\n              </h3>\r\n              {jobs?.map((tableItem, index) => (\r\n                <div className={styles[\"table\"]}>\r\n                  <div className={styles[\"table-body\"]}>\r\n                    <table>\r\n                      {Object.entries(tableItem).map(\r\n                        ([key, value]) =>\r\n                          key !== \"id\" && (\r\n                            <tr key={v4()}>\r\n                              <th>\r\n                                <FormattedMessage id={key} />\r\n                              </th>\r\n                              <td>{value}</td>\r\n                            </tr>\r\n                          )\r\n                      )}\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Col>\r\n            <Col xs={12}>\r\n              <h3>\r\n                <FormattedMessage id=\"experience\" />\r\n              </h3>\r\n              {experiences?.map((tableItem, index) => (\r\n                <div className={styles[\"table\"]}>\r\n                  <div className={styles[\"table-body\"]}>\r\n                    <table>\r\n                      {Object.entries(tableItem).map(\r\n                        ([key, value]) =>\r\n                          key !== \"id\" && (\r\n                            <tr key={v4()}>\r\n                              <th>\r\n                                <FormattedMessage id={key} />\r\n                              </th>\r\n                              <td>{value}</td>\r\n                            </tr>\r\n                          )\r\n                      )}\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Col>\r\n          </>\r\n        ) : (\r\n          <Col xs={12}>\r\n            <FormattedMessage id=\"notFound\" />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserCVPage;\r\n"],"names":["CV","useSelector","state","authentication","cv","name","jobs","education","experiences","Cv","user_id","type_of_id","country_id","updatedAt","createdAt","_id","Container","className","styles","Row","style","rowGap","Col","xs","id","Object","entries","map","key","value","v4","tableItem","index"],"sourceRoot":""}