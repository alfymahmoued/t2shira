{"version":3,"file":"static/js/756.2a527988.chunk.js","mappings":"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","sources":["api/upload.js","webpack://t2shira/./src/components/GetEmpolyeePage/index.module.scss?a68c","components/GetEmpolyeePage/InfoForm.jsx","components/GetEmpolyeePage/EducationForm.jsx","components/GetEmpolyeePage/SkillsForm.jsx","components/GetEmpolyeePage/JobsForm.jsx","components/GetEmpolyeePage/GetEmpolyeePage.jsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js"],"sourcesContent":["import server from \"./server\";\r\n\r\nexport const uploadApi = async (data) => {\r\n  try {\r\n    const response = await server.post(`upload`, data);\r\n    return response?.data?.data;\r\n  } catch (error) {\r\n    console.log(error, \"api error\");\r\n    return error;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"GetEmpolyeePage_table__wyFPq\",\"removeBtn\":\"GetEmpolyeePage_removeBtn__MYslm\",\"table-header\":\"GetEmpolyeePage_table-header__9KWny\",\"table-body\":\"GetEmpolyeePage_table-body__GHn2G\",\"body\":\"GetEmpolyeePage_body__GJNlM\",\"headers\":\"GetEmpolyeePage_headers__VWMPk\",\"tabBtn\":\"GetEmpolyeePage_tabBtn__g7-KE\",\"formContainer\":\"GetEmpolyeePage_formContainer__J7G2T\",\"form\":\"GetEmpolyeePage_form__wVK6Z\",\"fileInput\":\"GetEmpolyeePage_fileInput__wWbdG\",\"pictureInput\":\"GetEmpolyeePage_pictureInput__pLM9y\",\"search\":\"GetEmpolyeePage_search__39f5J\",\"select\":\"GetEmpolyeePage_select__F0Ykf\",\"policy\":\"GetEmpolyeePage_policy__rPV1I\",\"formItem\":\"GetEmpolyeePage_formItem__njKFD\",\"addField\":\"GetEmpolyeePage_addField__qEWXB\",\"rangeInput\":\"GetEmpolyeePage_rangeInput__P6JEA\",\"innrRow\":\"GetEmpolyeePage_innrRow__dNm3D\",\"errorField\":\"GetEmpolyeePage_errorField__opveM\"};","import React, { useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst InfoForm = () => {\r\n  const {\r\n    meta: { locale },\r\n    empolyee: { specialties, subscriptionTypes, nationalties },\r\n  } = useSelector((state) => state);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  useEffect(() => {\r\n    // registe the hidden inputs\r\n  }, []);\r\n\r\n  const intl = useIntl();\r\n\r\n  // TODO Compelte the needed methods for the form\r\n\r\n  return (\r\n    <Row className={styles.innrRow}>\r\n      <Col xs={12} lg={4} className={styles.pictureInput}>\r\n        <label\r\n          htmlFor=\"picture\"\r\n          className={`${errors?.[\"picture\"] ? styles.errorField : \"\"}\r\n        `}\r\n        ></label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"picture\"\r\n          {...register(\"picture\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12} lg={8}>\r\n        <Row className={styles.innrRow}>\r\n          <Col xs={12} lg={6}>\r\n            <input\r\n              type=\"text\"\r\n              className={`${errors?.[\"fristName\"] ? styles.errorField : \"\"}\r\n              `}\r\n              placeholder={intl.formatMessage({ id: \"first-name\" })}\r\n              {...register(\"fristName\", { required: true })}\r\n            />\r\n          </Col>\r\n          <Col xs={12} lg={6}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder={intl.formatMessage({ id: \"last-name\" })}\r\n              className={`${errors?.[\"lastName\"] ? styles.errorField : \"\"}\r\n              `}\r\n              {...register(\"lastName\", { required: true })}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder={intl.formatMessage({ id: \"email\" })}\r\n              className={`${errors?.[\"email\"] ? styles.errorField : \"\"}\r\n              `}\r\n              {...register(\"email\", { required: true })}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={intl.formatMessage({ id: \"phone\" })}\r\n          className={`${errors?.[\"phone\"] ? styles.errorField : \"\"}\r\n              `}\r\n          {...register(\"phone\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={intl.formatMessage({ id: \"additional-phone\" })}\r\n          {...register(\"phone_optinal\")}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <select\r\n          className={`${errors?.[\"specialty_id\"] ? styles.errorField : \"\"}\r\n        `}\r\n          {...register(\"specialty_id\", { required: true })}\r\n        >\r\n          {specialties.map((specialty) => (\r\n            <option value={specialty.id}>\r\n              {locale === \"ar\" ? specialty.name_ar : specialty.name_en}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </Col>\r\n      <Col xs={12} lg={6}>\r\n        <input\r\n          type=\"text\"\r\n          className={`${errors?.[\"city\"] ? styles.errorField : \"\"}\r\n        `}\r\n          placeholder={intl.formatMessage({ id: \"city\" })}\r\n          {...register(\"city\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12} lg={6}>\r\n        <input\r\n          type=\"text\"\r\n          className={`${errors?.[\"zip_code\"] ? styles.errorField : \"\"}\r\n          `}\r\n          placeholder={intl.formatMessage({ id: \"postal-code\" })}\r\n          {...register(\"zip_code\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"date\"\r\n          className={`${errors?.[\"date_of_birth\"] ? styles.errorField : \"\"}\r\n          `}\r\n          placeholder={intl.formatMessage({ id: \"birth-date\" })}\r\n          {...register(\"date_of_birth\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"text\"\r\n          className={`${errors?.[\"place_of_birth\"] ? styles.errorField : \"\"}\r\n          `}\r\n          placeholder={intl.formatMessage({ id: \"birth-place\" })}\r\n          {...register(\"place_of_birth\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"text\"\r\n          className={`${errors?.[\"current_place\"] ? styles.errorField : \"\"}\r\n          `}\r\n          placeholder={intl.formatMessage({ id: \"residence-place\" })}\r\n          {...register(\"current_place\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <select\r\n          className={`${errors?.[\"sex\"] ? styles.errorField : \"\"}\r\n          `}\r\n          {...register(\"sex\", { required: true })}\r\n        >\r\n          <option value={null} selected disabled>\r\n            {intl.formatMessage({ id: \"gender\" })}\r\n          </option>\r\n          <option value={\"mele\"}>{intl.formatMessage({ id: \"male\" })}</option>\r\n          <option value={\"femele\"}>\r\n            {intl.formatMessage({ id: \"female\" })}\r\n          </option>\r\n        </select>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <select\r\n          className={`${errors?.[\"country_id\"] ? styles.errorField : \"\"}\r\n          `}\r\n          {...register(\"country_id\", { required: true })}\r\n        >\r\n          <option value={null} selected disabled>\r\n            {intl.formatMessage({ id: \"selectCountry\" })}\r\n          </option>\r\n          {nationalties?.map((nationalty) => (\r\n            <option value={nationalty._id}>\r\n              {nationalty?.[locale === \"ar\" ? \"name_ar\" : \"name_en\"]}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <select\r\n          className={`${errors?.[\"type_of_id\"] ? styles.errorField : \"\"}\r\n         `}\r\n          {...register(\"type_of_id\", { required: true })}\r\n        >\r\n          <option value={null} selected disabled>\r\n            {intl.formatMessage({ id: \"proof-type\" })}\r\n          </option>\r\n          <option value={\"passport\"}>\r\n            {intl.formatMessage({ id: \"passport\" })}\r\n          </option>\r\n          <option value={\"id\"}>\r\n            {intl.formatMessage({ id: \"identity-card\" })}\r\n          </option>\r\n        </select>\r\n      </Col>\r\n      <Col xs={12}>\r\n        <input\r\n          type=\"text\"\r\n          className={`${errors?.[\"id_number\"] ? styles.errorField : \"\"}\r\n         `}\r\n          placeholder={intl.formatMessage({ id: \"identity-number\" })}\r\n          {...register(\"id_number\", { required: true })}\r\n        />\r\n      </Col>\r\n      <Col xs={12}>\r\n        <select\r\n          className={`${errors?.[\"social_status\"] ? styles.errorField : \"\"}\r\n         `}\r\n          {...register(\"social_status\", { required: true })}\r\n        >\r\n          <option value={null} disabled>\r\n            {intl.formatMessage({ id: \"social-status\" })}\r\n          </option>\r\n          <option value={\"marriage\"}>\r\n            {intl.formatMessage({ id: \"married\" })}\r\n          </option>\r\n          <option value={\"divorced\"}>\r\n            {intl.formatMessage({ id: \"divorced\" })}\r\n          </option>\r\n          <option value={\"single\"}>\r\n            {intl.formatMessage({ id: \"single\" })}\r\n          </option>\r\n        </select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InfoForm;\r\n","import { uploadApi } from \"api/upload\";\r\nimport React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm, useFormContext } from \"react-hook-form\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { v4 } from \"uuid\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst EducationForm = () => {\r\n  const { control } = useFormContext();\r\n  const { formatMessage } = useIntl();\r\n  const { fields, append, remove } = useFieldArray({\r\n    name: \"education\",\r\n    control: control,\r\n  });\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  //   handlers Mehtods\r\n  const addEducationHandler = async ({ certification, ...data }) => {\r\n    const file = new FormData();\r\n    file.append(\"files\", certification[0]);\r\n    try {\r\n      const fileResponse = await uploadApi(file);\r\n      append({ ...data, certification: fileResponse?.[0] });\r\n    } catch (error) {\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  const intl = useIntl();\r\n  return (\r\n    <form onSubmit={handleSubmit(addEducationHandler)}>\r\n      <Row className={styles.innrRow}>\r\n        <Col xs={12}>\r\n          <select\r\n            className={`${errors?.[\"level\"] ? styles.errorField : \"\"}\r\n          `}\r\n            {...register(\"level\", { required: true })}\r\n          >\r\n            <option value={\"\"}>\r\n              {formatMessage({ id: \"levelPlaceHolder\" })}\r\n            </option>\r\n            <option value={\"postgraduate\"}>\r\n              {formatMessage({ id: \"postgraduate\" })}\r\n            </option>\r\n            <option value={\"high\"}>{formatMessage({ id: \"high\" })}</option>\r\n            <option value={\"average\"}>\r\n              {formatMessage({ id: \"average\" })}\r\n            </option>\r\n            <option value={\"mediocre\"}>\r\n              {formatMessage({ id: \"mediocre\" })}\r\n            </option>\r\n            <option value={\"withoutEducation\"}>\r\n              {formatMessage({ id: \"withoutEducation\" })}\r\n            </option>\r\n          </select>\r\n        </Col>\r\n        <Col xs={12}>\r\n          <input\r\n            type=\"text\"\r\n            className={`${errors?.[\"university\"] ? styles.errorField : \"\"}\r\n            `}\r\n            placeholder={formatMessage({ id: \"university\" })}\r\n            {...register(\"university\", { required: true })}\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} lg={6}>\r\n          <input\r\n            type=\"date\"\r\n            className={`${errors?.[\"startDate\"] ? styles.errorField : \"\"}\r\n            `}\r\n            placeholder={intl.formatMessage({ id: \"start-study\" })}\r\n            {...register(\"startDate\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12} lg={6}>\r\n          <input\r\n            type=\"date\"\r\n            className={`${errors?.[\"endDate\"] ? styles.errorField : \"\"}\r\n            `}\r\n            placeholder={intl.formatMessage({ id: \"end-study\" })}\r\n            {...register(\"endDate\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <label htmlFor=\"certification\" className={styles.fileInput}>\r\n            <p>\r\n              <FormattedMessage id=\"certification\" />\r\n            </p>\r\n            <input\r\n              type=\"file\"\r\n              className={`${styles.fileInput} ${\r\n                errors?.[\"certification\"] ? styles.errorField : \"\"\r\n              }\r\n              `}\r\n              id=\"certification\"\r\n              {...register(\"certification\", { required: false, type: \"mix\" })}\r\n            />\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M14 0a5 5 0 0 1 5 5v12a7 7 0 1 1-14 0V9h2v8a5 5 0 0 0 10 0V5a3 3 0 1 0-6 0v12a1 1 0 1 0 2 0V6h2v11a3 3 0 1 1-6 0V5a5 5 0 0 1 5-5Z\"\r\n                fill=\"currentColor\"\r\n              />\r\n            </svg>\r\n          </label>\r\n        </Col>\r\n        <Col xs={12}>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            className={`${errors?.[\"notesPlaceholder\"] ? styles.errorField : \"\"}\r\n            `}\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder={formatMessage({ id: \"notesPlaceholder\" })}\r\n            {...register(\"notes\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <input\r\n            type=\"submit\"\r\n            placeholder={intl.formatMessage({ id: \"add-education\" })}\r\n            value={intl.formatMessage({ id: \"add-education\" })}\r\n            className={styles.addField}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          {fields?.map((tableItem, index) => (\r\n            <div className={styles[\"table\"]}>\r\n              <div className={styles[\"table-body\"]}>\r\n                <table>\r\n                  {Object.entries(tableItem).map(\r\n                    ([key, value]) =>\r\n                      key !== \"id\" && (\r\n                        <tr key={v4()}>\r\n                          <th>\r\n                            <FormattedMessage id={key} />\r\n                          </th>\r\n                          <td>{value}</td>\r\n                        </tr>\r\n                      )\r\n                  )}\r\n                </table>\r\n                <div\r\n                  className={styles.removeBtn}\r\n                  onClick={() => remove(index)}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </form>\r\n  );\r\n};\r\nexport default EducationForm;\r\n","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport { useFieldArray, useForm, useFormContext } from \"react-hook-form\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { v4 } from \"uuid\";\r\nimport { uploadApi } from \"api/upload\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SkillsForm = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { control } = useFormContext();\r\n  const { fields, append, remove } = useFieldArray({\r\n    name: \"experiences\",\r\n    control: control,\r\n  });\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm();\r\n  //   handlers Mehtods\r\n  const addSkillHandler = async ({ certification, ...data }) => {\r\n    const file = new FormData();\r\n    file.append(\"files\", certification[0]);\r\n    try {\r\n      const fileResponse = await uploadApi(file);\r\n      append({ ...data, certification: fileResponse?.[0] });\r\n      reset();\r\n    } catch (error) {\r\n      toast.error(error);\r\n    }\r\n  };\r\n\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(addSkillHandler)}>\r\n      <Row className={styles.innrRow}>\r\n        <Col xs={12}>\r\n          <input\r\n            className={errors?.[\"skill\"] ? styles.errorField : \"\"}\r\n            type=\"text\"\r\n            placeholder={intl.formatMessage({ id: \"skill\" })}\r\n            {...register(\"skill\", { required: true })}\r\n          />\r\n        </Col>\r\n        {/* <Col xs={12}>\r\n          <h6> المستوي</h6>\r\n        </Col>\r\n        <Col xs={12}>\r\n          <input\r\n            className={styles.rangeInput}\r\n            type=\"range\"\r\n            {...register(\"skillCount\")}\r\n            max={100}\r\n            min={1}\r\n          />\r\n        </Col> */}\r\n        <Col xs={12}>\r\n          <label\r\n            htmlFor=\"skillCertification\"\r\n            className={`${styles.fileInput} ${\r\n              errors?.[\"certification\"] ? styles.errorField : \"\"\r\n            }\r\n            `}\r\n          >\r\n            <p>\r\n              <FormattedMessage id=\"certification\" />\r\n            </p>\r\n            <input\r\n              id=\"skillCertification\"\r\n              name=\"certification\"\r\n              type=\"file\"\r\n              {...register(\"certification\", {\r\n                required: true,\r\n                type: \"mix\",\r\n              })}\r\n            />\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M14 0a5 5 0 0 1 5 5v12a7 7 0 1 1-14 0V9h2v8a5 5 0 0 0 10 0V5a3 3 0 1 0-6 0v12a1 1 0 1 0 2 0V6h2v11a3 3 0 1 1-6 0V5a5 5 0 0 1 5-5Z\"\r\n                fill=\"currentColor\"\r\n              />\r\n            </svg>\r\n          </label>\r\n        </Col>\r\n        <Col xs={12}>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder={formatMessage({ id: \"notesPlaceholder\" })}\r\n            className={errors?.[\"notes\"] ? styles.errorField : \"\"}\r\n            {...register(\"notes\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <input\r\n            type=\"submit\"\r\n            value={formatMessage({ id: \"add-skill\" })}\r\n            className={styles.addField}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          {fields?.map((tableItem, index) => (\r\n            <div className={styles[\"table\"]}>\r\n              <div className={styles[\"table-body\"]}>\r\n                <table>\r\n                  {Object.entries(tableItem).map(\r\n                    ([key, value]) =>\r\n                      key !== \"id\" && (\r\n                        <tr key={v4()}>\r\n                          <th>\r\n                            <FormattedMessage id={key} />\r\n                          </th>\r\n                          <td>{value}</td>\r\n                        </tr>\r\n                      )\r\n                  )}\r\n                </table>\r\n                <div\r\n                  className={styles.removeBtn}\r\n                  onClick={() => remove(index)}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SkillsForm;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm, useFormContext } from \"react-hook-form\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { v4 } from \"uuid\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst JobsForm = () => {\r\n  const intl = useIntl();\r\n  const { control } = useFormContext();\r\n  const { fields, append, remove } = useFieldArray({\r\n    name: \"jobs\",\r\n    control: control,\r\n  });\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  //   handlers Mehtods\r\n  const addJobHandler = (data) => {\r\n    append(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(addJobHandler)}>\r\n      <Row className={styles.innrRow}>\r\n        <Col xs={12}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={intl.formatMessage({ id: \"place\" })}\r\n            className={`${errors?.[\"place\"] ? styles.errorField : \"\"}\r\n            `}\r\n            {...register(\"place\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12} lg={6}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={intl.formatMessage({ id: \"city\" })}\r\n            className={`${errors?.[\"city\"] ? styles.errorField : \"\"}\r\n            `}\r\n            {...register(\"city\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12} lg={6}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={intl.formatMessage({ id: \"town\" })}\r\n            className={`${errors?.[\"country\"] ? styles.errorField : \"\"}\r\n            `}\r\n            {...register(\"country\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder={intl.formatMessage({ id: \"job\" })}\r\n            className={`${errors?.[\"title\"] ? styles.errorField : \"\"}\r\n            `}\r\n            {...register(\"title\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12} lg={6}>\r\n          <input\r\n            type=\"date\"\r\n            className={`${errors?.[\"startDate\"] ? styles.errorField : \"\"}\r\n            `}\r\n            placeholder={intl.formatMessage({ id: \"start-job\" })}\r\n            {...register(\"startDate\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12} lg={6}>\r\n          <input\r\n            type=\"date\"\r\n            className={`${errors?.[\"endDate\"] ? styles.errorField : \"\"}\r\n            `}\r\n            placeholder={intl.formatMessage({ id: \"end-job\" })}\r\n            {...register(\"endDate\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <textarea\r\n            name=\"\"\r\n            id=\"\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            className={`${errors?.[\"reason\"] ? styles.errorField : \"\"}\r\n            `}\r\n            placeholder={intl.formatMessage({ id: \"left-job\" })}\r\n            {...register(\"reason\", { required: true })}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <input\r\n            type=\"submit\"\r\n            value={intl.formatMessage({ id: \"add-job\" })}\r\n            // value=\" إضافة وظيفة +\"\r\n            className={styles.addField}\r\n          />\r\n        </Col>\r\n        <Col xs={12}>\r\n          {fields?.map((tableItem, index) => (\r\n            <div className={styles[\"table\"]}>\r\n              <div className={styles[\"table-body\"]}>\r\n                <table>\r\n                  {Object.entries(tableItem).map(\r\n                    ([key, value]) =>\r\n                      key !== \"id\" && (\r\n                        <tr key={v4()}>\r\n                          <th>\r\n                            <FormattedMessage id={key} />\r\n                          </th>\r\n                          <td>{value}</td>\r\n                        </tr>\r\n                      )\r\n                  )}\r\n                </table>\r\n                <div\r\n                  className={styles.removeBtn}\r\n                  onClick={() => remove(index)}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default JobsForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { Accordion, Col, Container, Row } from \"react-bootstrap\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\n// needed styles\r\nimport styles from \"./index.module.scss\";\r\nimport InfoForm from \"./InfoForm\";\r\nimport EducationForm from \"./EducationForm\";\r\nimport SkillsForm from \"./SkillsForm\";\r\nimport JobsForm from \"./JobsForm\";\r\nimport { addCv } from \"api/employee\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\n\r\nconst GetEmpolyeePage = () => {\r\n  const methods = useForm();\r\n  const navigate = useNavigate();\r\n  const { handleSubmit, register, getValues } = methods;\r\n  const submitHandler = async ({ fristName, lastName, picture, ...data }) => {\r\n    try {\r\n      data = await addCv({\r\n        ...data,\r\n        name: `${fristName} ${lastName}`,\r\n        picture: picture[0]?.name,\r\n      });\r\n      navigate(`/profile/CV/${data.id}`);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n\r\n    // TODO: add the rest of the data and file upload before submit\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <Container>\r\n        <Row>\r\n          {/* TODO Complete the two other forms  */}\r\n          <Col xs={12} className={styles.headers}>\r\n            <h3>{intl.formatMessage({ id: \"jobs\" })}</h3>\r\n            <p>{intl.formatMessage({ id: \"jobs-desc\" })}</p>\r\n          </Col>\r\n          <FormProvider {...methods}>\r\n            <Col xs={12} className={styles.formContainer}>\r\n              <Accordion defaultActiveKey={\"0\"}>\r\n                <Row className={styles.form}>\r\n                  <Col xs={12}>\r\n                    <Accordion.Item eventKey=\"0\" className={styles.formItem}>\r\n                      <Accordion.Header>\r\n                        <FormattedMessage id=\"personalInfo\" />\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <InfoForm />\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Accordion.Item eventKey=\"1\" className={styles.formItem}>\r\n                      <Accordion.Header>\r\n                        <FormattedMessage id=\"education\" />\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <EducationForm />\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Accordion.Item eventKey=\"2\" className={styles.formItem}>\r\n                      <Accordion.Header>\r\n                        <FormattedMessage id=\"jobs\" />\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <JobsForm />\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <Accordion.Item eventKey=\"3\" className={styles.formItem}>\r\n                      <Accordion.Header>\r\n                        <FormattedMessage id=\"experience\" />\r\n                      </Accordion.Header>\r\n                      <Accordion.Body>\r\n                        <SkillsForm />\r\n                      </Accordion.Body>\r\n                    </Accordion.Item>\r\n                  </Col>\r\n                  <form onSubmit={handleSubmit(submitHandler)}>\r\n                    <Col xs={12}>\r\n                      <label htmlFor=\"policy\" className={styles.policy}>\r\n                        <input\r\n                          id=\"policy\"\r\n                          type=\"checkbox\"\r\n                          {...register(\"policy\", { required: true })}\r\n                        />\r\n                        <span>\r\n                          {intl.formatMessage({ id: \"agree-on-terms\" })}\r\n                        </span>\r\n                      </label>\r\n                      <button type=\"submit\">\r\n                        {intl.formatMessage({ id: \"submit\" })}\r\n                      </button>\r\n                    </Col>\r\n                  </form>\r\n                </Row>\r\n              </Accordion>\r\n            </Col>\r\n          </FormProvider>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetEmpolyeePage;\r\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;"],"names":["uploadApi","data","server","response","console","log","useSelector","state","locale","meta","empolyee","specialties","nationalties","subscriptionTypes","useFormContext","register","errors","formState","useEffect","intl","useIntl","Row","className","styles","Col","xs","lg","htmlFor","type","id","required","placeholder","formatMessage","map","specialty","value","name_ar","name_en","selected","disabled","nationalty","_id","control","useFieldArray","name","fields","append","remove","useForm","handleSubmit","addEducationHandler","certification","file","FormData","fileResponse","toast","onSubmit","width","height","viewBox","fill","xmlns","d","cols","rows","tableItem","index","Object","entries","key","v4","onClick","reset","addSkillHandler","methods","navigate","useNavigate","submitHandler","getValues","fristName","lastName","picture","addCv","alert","message","Container","Accordion","defaultActiveKey","eventKey","funcs","filter","f","reduce","acc","Error","args","apply","this","MARGINS","getDefaultDimensionValue","dimension","elem","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","React","ref","onEnter","onEntering","onEntered","onExit","onExiting","children","props","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","innerProps","classNames","AccordionCollapse","as","Component","bsPrefix","activeEventKey","useContext","AccordionContext","useBootstrapPrefix","isAccordionItemSelected","displayName","AccordionBody","AccordionItemContext","AccordionHeader","AccordionButton","AccordionItem","contextValue","useUncontrolled","activeKey","onSelect","flush","alwaysOpen","controlledProps","prefix","assign","Button","Item","Header","Body","useAccordionButton","e","eventKeyPassed","Array","isArray","includes","k","accordionOnClick","context"],"sourceRoot":""}