{"version":3,"file":"static/js/418.98956966.chunk.js","mappings":"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","sources":["webpack://t2shira/./src/components/loginPage/index.module.scss?3f8e","components/loginPage/LoginForm.jsx","components/loginPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"body\":\"loginPage_body__WDgfi\",\"mainRow\":\"loginPage_mainRow__i5b25\",\"pageHeaders\":\"loginPage_pageHeaders__vZSvQ\",\"formRow\":\"loginPage_formRow__xJCcu\",\"spliterCol\":\"loginPage_spliterCol__Opg9M\",\"Form\":\"loginPage_Form__ZHXQQ\",\"otherOptions\":\"loginPage_otherOptions__wIILp\",\"signUp\":\"loginPage_signUp__3ZnpG\",\"loginOptions\":\"loginPage_loginOptions__2npJg\"};","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// needed styles\r\nimport pageStyles from \"./index.module.scss\";\r\n\r\n// firebase\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { authentication } from \"firebaseConfig/firebaseConfig\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInUser } from \"store/auth/slice\";\r\n\r\nconst LoginForm = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n  const { error, user, isLoggedIn } =\r\n    useSelector((state) => state.authentication) || {};\r\n  useEffect(() => {\r\n    if (error) alert(error);\r\n  }, [error, user]);\r\n  useEffect(() => {\r\n    if (isLoggedIn) navigate(\"/\", { replace: true });\r\n  }, [isLoggedIn, navigate]);\r\n\r\n  const { register, handleSubmit, reset } = useForm({\r\n    shouldUseNativeValidation: true,\r\n  });\r\n\r\n  // TODO   handle the login method\r\n  const submitHandler = (data) => {\r\n    const { email, password } = data || {};\r\n    dispatch(signInUser({ email, password }));\r\n\r\n    reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(authentication, (user) => {});\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submitHandler)} className={pageStyles.Form}>\r\n      <h3>تسجيل الدخول</h3>\r\n\r\n      <label htmlFor=\"email\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"البريد الإلكتروني\"\r\n          {...register(\"email\", { required: true })}\r\n        />\r\n        <div>\r\n          {/* <span></span>\r\n          <Link to=\"/login\">هل نسيت البريد الإلكتروني؟</Link> */}\r\n        </div>\r\n      </label>\r\n      <label htmlFor=\"password\">\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"كلمة المرور\"\r\n          {...register(\"password\", { required: true })}\r\n        />\r\n        <div>\r\n          <span></span>\r\n          <Link to=\"/resetPassword\">هل نسيت كلمة المرور؟</Link>\r\n        </div>\r\n      </label>\r\n      <label htmlFor=\"remmberMe\">\r\n        <input type=\"checkbox\" name=\"remmberMe\" id=\"remmberMe\" />\r\n        تذكر بياناتي على هذا الجهاز\r\n      </label>\r\n\r\n      <input type=\"submit\" value=\"تسجيل الدخول\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// needed styles\r\nimport pageStyles from \"./index.module.scss\";\r\n\r\n// assets\r\nimport Google from \"assets/images/google.png\";\r\nimport Facebook from \"assets/images/facebook.png\";\r\n\r\n// needed components\r\nimport LoginForm from \"./LoginForm\";\r\n\r\n// firebase\r\nimport { FacebookAuthProvider, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { signInSocialUser } from \"store/auth/slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Index = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const signInWithGoggle = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    dispatch(signInSocialUser({ provider }));\r\n  };\r\n\r\n  const signInWithFacebook = async () => {\r\n    const provider = new FacebookAuthProvider();\r\n    dispatch(signInSocialUser({ provider }));\r\n  };\r\n\r\n  return (\r\n    <div className={pageStyles.body}>\r\n      <Container>\r\n        <Row className={pageStyles.mainRow}>\r\n          <Col xs={12} className={pageStyles.pageHeaders}>\r\n            <h3>\r\n              <FormattedMessage id=\"tashera-login\" />\r\n            </h3>\r\n            <p>\r\n              <FormattedMessage id=\"tashera-login-description\" />\r\n            </p>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <Row className={pageStyles.formRow}>\r\n              <Col>\r\n                <LoginForm />\r\n              </Col>\r\n              <Col xs={12} md={1} className={pageStyles.spliterCol}></Col>\r\n              <Col className={pageStyles.otherOptions}>\r\n                <h5>\r\n                  <FormattedMessage id=\"do-not-have-account\" />\r\n                </h5>\r\n                <p>\r\n                  <FormattedMessage id=\"do-not-have-account-description\" />\r\n                </p>\r\n                <Link to={\"/SignUp\"} className={pageStyles.signUp}>\r\n                  <FormattedMessage id=\"join-us\" />\r\n                </Link>\r\n                <div className={pageStyles.loginOptions}>\r\n                  <button onClick={signInWithGoggle}>\r\n                    <img src={Google} alt=\"Google login\" />\r\n                  </button>\r\n                  <button onClick={signInWithFacebook}>\r\n                    <img src={Facebook} alt=\"Facebook login\" />\r\n                  </button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","useSelector","state","authentication","error","user","isLoggedIn","useEffect","alert","replace","useForm","shouldUseNativeValidation","register","handleSubmit","reset","onAuthStateChanged","onSubmit","data","email","password","signInUser","className","pageStyles","htmlFor","type","name","id","placeholder","required","to","value","signInWithGoggle","provider","GoogleAuthProvider","signInSocialUser","signInWithFacebook","FacebookAuthProvider","Container","Row","Col","xs","md","onClick","src","Google","alt","Facebook"],"sourceRoot":""}