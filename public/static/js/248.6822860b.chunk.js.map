{"version":3,"file":"static/js/248.6822860b.chunk.js","mappings":"6NACA,EAA4B,qCAA5B,EAAwE,gC,8EC8DxE,EA/CkB,WAChB,IAAIA,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,KAGb,IADiBC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,mBAAmB,IAElD,GAHA,EAAQC,MAAR,EAAeC,KAAf,EAAqBC,YAGqBC,EAAAA,EAAAA,IAAQ,CAChDC,2BAA2B,KADrBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAMZC,GANN,EAAgCC,MAMb,mCAAG,WAAOC,GAAP,8EACZC,GAAUD,GAAQ,IAAlBC,MADY,mBAGZC,EAAAA,EAAAA,IAAuBZ,EAAAA,EAAgBW,GAH3B,OAIlBE,EAAAA,GAAAA,QAAclB,EAAKmB,cAAc,CAAEC,GAAI,4BACvCtB,EAAS,KALS,gDAOlBuB,QAAQC,IAAR,MACAJ,EAAAA,GAAAA,MAAY,yBARM,yDAAH,uDAYnB,OACE,SAACK,EAAA,EAAD,CAAWC,UAAWC,EAAtB,UACE,kBAAMC,SAAUd,EAAaC,GAAgBW,UAAWC,EAAxD,WACE,wBAAKzB,EAAKmB,cAAc,CAAEC,GAAI,sBAC9B,mBAAOO,QAAQ,QAAf,WACE,0BACEC,KAAK,QACLC,KAAK,QACLT,GAAG,QACHU,YAAY,qGACRnB,EAAS,QAAS,CAAEoB,UAAU,OAEpC,uBAGF,kBAAOH,KAAK,SAASI,MAAOhC,EAAKmB,cAAc,CAAEC,GAAI","sources":["webpack://t2shira/./src/components/ResetPasswordPage/index.module.scss?3ca2","components/ResetPasswordPage/ResetPasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResetPasswordPage_container__QsOZv\",\"Form\":\"ResetPasswordPage_Form__n6FFt\"};","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// needed styles\r\nimport styles from \"./index.module.scss\";\r\n\r\n// firebase\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { authentication } from \"firebaseConfig/firebaseConfig\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInUser } from \"store/auth/slice\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { toast } from \"react-toastify\";\r\nimport { sendPasswordResetEmail } from \"firebase/auth\";\r\nconst LoginForm = () => {\r\n  let navigate = useNavigate();\r\n  const intl = useIntl();\r\n\r\n  const dispatch = useDispatch();\r\n  const { error, user, isLoggedIn } =\r\n    useSelector((state) => state.authentication) || {};\r\n\r\n  const { register, handleSubmit, reset } = useForm({\r\n    shouldUseNativeValidation: true,\r\n  });\r\n\r\n  // TODO   handle the login method\r\n\r\n  const submitHandler = async (data) => {\r\n    const { email } = data || {};\r\n    try {\r\n      await sendPasswordResetEmail(authentication, email);\r\n      toast.success(intl.formatMessage({ id: \"reset-password-success\" }));\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"An Error Had Happened\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className={styles[\"container\"]}>\r\n      <form onSubmit={handleSubmit(submitHandler)} className={styles.Form}>\r\n        <h3>{intl.formatMessage({ id: \"reset-password\" })}</h3>\r\n        <label htmlFor=\"email\">\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"البريد الإلكتروني\"\r\n            {...register(\"email\", { required: true })}\r\n          />\r\n          <div></div>\r\n        </label>\r\n\r\n        <input type=\"submit\" value={intl.formatMessage({ id: \"submit\" })} />\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["navigate","useNavigate","intl","useIntl","useDispatch","useSelector","state","authentication","error","user","isLoggedIn","useForm","shouldUseNativeValidation","register","handleSubmit","submitHandler","reset","data","email","sendPasswordResetEmail","toast","formatMessage","id","console","log","Container","className","styles","onSubmit","htmlFor","type","name","placeholder","required","value"],"sourceRoot":""}